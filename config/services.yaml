# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
#    App\EventSubscriber\PersistUser:
##        tags:
##            -
##                name: 'doctrine.event_listener'
##                # this is the only required option for the lifecycle listener tag
##                event: 'postPersist'
##
##                # listeners can define their priority in case multiple listeners are associated
##                # to the same event (default priority = 0; higher numbers = listener is run earlier)
##                priority: 500
##
##                # you can also restrict listeners to a specific Doctrine connection
##                connection: 'default'
#
#
#
#        tags:
#
#                name: 'doctrine.orm.entity_listener'
#                event: 'postUpdate'
#                entity: 'App\Entity\Usuario'




    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.query_filter.order.converter:
        class: 'DigitalAscetic\QueryFilterBundle\Service\OrderByParameterConverter'
        arguments: [ 'order', 'orderBy' ]

    DigitalAscetic\QueryFilterBundle\Service\OrderByParameterConverter: '@app.query_filter.order.converter'

    app.query_filter.converter:
        class: 'DigitalAscetic\QueryFilterBundle\Service\DefaultQueryFilterConverter'
        arguments: [ '@app.query_filter.param.converter', 'filter' ]
        public: true

    DigitalAscetic\QueryFilterBundle\Service\DefaultQueryFilterConverter: '@app.query_filter.converter'

    app.query_filter.param.converter:
        class: 'DigitalAscetic\QueryFilterBundle\Service\DelegateParameterConverter'
        arguments: [ [ '@app.query_filter.order.converter' ] ]

    DigitalAscetic\QueryFilterBundle\Service\DelegateParameterConverter: '@app.query_filter.param.converter'

    App\EventSubscriber\DatabaseActivitySubscriber:
        tags:
            - { name: 'doctrine.event_subscriber' }

    App\EventSubscriber\UsuarioEventSubscriber:
                  tags:
                      - { name: 'doctrine.event_subscriber' }